// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load params.config
includeConfig 'conf/params.config'

// Load resources.config
includeConfig 'conf/resources.config'

profiles {
    docker {
        docker.enabled = true
        docker.userEmulation = true
        singularity.enabled = false
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        process {
      withName:FASTQC {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:MULTIQC {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:TRIM_GALORE {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:BISMARK_GENOME_PREPARATION {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:BISMARK_ALIGN {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:BISMARK_DEDUPLICATE {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:BISMARK_METHYLATION_EXTRACTOR {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:BISMARK_REPORT {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:SAMTOOLS_SORT {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:SAMTOOLS_INDEX {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:QUALIMAP {
        container = 'docker://pegi3s/qualimap:latest'
      }
      withName:EDGER_ANALYSIS {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:METHYLKIT_ANALYSIS {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:POST_PROCESSING {
          container = 'docker://jd21/twistnext:latest'
      }
      withName:GO_ANALYSIS {
          container = 'docker://jd21/r-nf:240129'
      }
      withName:ANNOTATE_RESULTS {
          container = 'docker://jd21/r-nf:240129'
      }
    }
    }
    conda {
        conda.enabled = true
        docker.enabled = false
        singularity.enabled = false
        process.conda = "$baseDir/environment.yml"
    }

}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

// Prevent pipeline from failing if a process fails
process.errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }